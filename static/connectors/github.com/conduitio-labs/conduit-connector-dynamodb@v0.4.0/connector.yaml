version: "1.0"
specification:
  name: dynamodb
  summary: A DynamoDB source plugin for Conduit
  description: |
    ## Source
    A source connector that pulls data from a DynamoDB table to downstream resources via Conduit.

    The connector starts with a snapshot of the data currently existent in the table, sends these records to the
    destination, then starts the CDC (Change Data Capture) mode which will listen to events happening on the table
    in real-time, and sends these events' records to the destination (these events include: `updates`, `deletes`, and `inserts`).
    You can opt out from taking the snapshot by setting the parameter `skipSnapshot` to `true`, meaning that only the CDC
    events will be captured.

    The source connector uses [DynamoDB Streams](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html) to get CDC events,
    so you need to enable the stream before running the connector. Check out the documentation for [how to enable a DynamoDB Stream](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html#Streams.Enabling).

    ## Destination
    A destination connector that takes a conduit record and stores it into a DynamoDB table.

    The Destination is designed to handle different kinds of operations, based on the `Operation` field in the record
    received, the destination will either `insert`, `update` or `delete` the record in the target table. Snapshot records
    are always inserted.

    > **Note:** Make sure to create the destination table before running the pipeline, the table needs to have the same
    schema as the records that will be sent into it, either from the source, or from a processor.
  version: v0.4.0
  author: Meroxa, Inc.
  source:
    parameters:
      - name: aws.region
        description: AWS region.
        type: string
        default: ""
        validations:
          - type: required
            value: ""
      - name: table
        description: Table is the DynamoDB table name to pull data from, or push data into.
        type: string
        default: ""
        validations:
          - type: required
            value: ""
      - name: aws.accessKeyId
        description: |-
          AWS access key id. Optional - if not provided, the connector will use the default credential chain
          (environment variables, shared credentials file, or IAM role). For production environments,
          it's recommended to use the default credential chain with IAM roles rather than static credentials.
        type: string
        default: ""
        validations: []
      - name: aws.secretAccessKey
        description: |-
          AWS secret access key. Optional - if not provided, the connector will use the default credential chain
          (environment variables, shared credentials file, or IAM role). For production environments,
          it's recommended to use the default credential chain with IAM roles rather than static credentials.
        type: string
        default: ""
        validations: []
      - name: aws.sessionToken
        description: |-
          AWS temporary session token. Optional - if not provided, the connector will use the default credential chain.
          Note that to keep the connector running long-term, you should use the default credential chain
          rather than temporary session tokens which will expire. For production environments,
          it's recommended to use IAM roles (IRSA, EC2 instance profile, or ECS task role).
        type: string
        default: ""
        validations: []
      - name: aws.url
        description: The URL for AWS (useful when testing the connector with localstack).
        type: string
        default: ""
        validations: []
      - name: discoveryPollingPeriod
        description: Discovery polling period for the CDC mode of how often to check for new shards in the DynamoDB Stream, formatted as a time.Duration string.
        type: duration
        default: 10s
        validations: []
      - name: recordsPollingPeriod
        description: Records polling period for the CDC mode of how often to get new records from a shard, formatted as a time.Duration string.
        type: duration
        default: 1s
        validations: []
      - name: skipSnapshot
        description: SkipSnapshot determines weather to skip the snapshot or not.
        type: bool
        default: "false"
        validations: []
      - name: sdk.batch.delay
        description: Maximum delay before an incomplete batch is read from the source.
        type: duration
        default: "0"
        validations: []
      - name: sdk.batch.size
        description: Maximum size of batch before it gets read from the source.
        type: int
        default: "0"
        validations:
          - type: greater-than
            value: "-1"
      - name: sdk.schema.context.enabled
        description: |-
          Specifies whether to use a schema context name. If set to false, no schema context name will
          be used, and schemas will be saved with the subject name specified in the connector
          (not safe because of name conflicts).
        type: bool
        default: "true"
        validations: []
      - name: sdk.schema.context.name
        description: |-
          Schema context name to be used. Used as a prefix for all schema subject names.
          If empty, defaults to the connector ID.
        type: string
        default: ""
        validations: []
      - name: sdk.schema.extract.key.enabled
        description: Whether to extract and encode the record key with a schema.
        type: bool
        default: "true"
        validations: []
      - name: sdk.schema.extract.key.subject
        description: |-
          The subject of the key schema. If the record metadata contains the field
          "opencdc.collection" it is prepended to the subject name and separated
          with a dot.
        type: string
        default: key
        validations: []
      - name: sdk.schema.extract.payload.enabled
        description: Whether to extract and encode the record payload with a schema.
        type: bool
        default: "true"
        validations: []
      - name: sdk.schema.extract.payload.subject
        description: |-
          The subject of the payload schema. If the record metadata contains the
          field "opencdc.collection" it is prepended to the subject name and
          separated with a dot.
        type: string
        default: payload
        validations: []
      - name: sdk.schema.extract.type
        description: The type of the payload schema.
        type: string
        default: avro
        validations:
          - type: inclusion
            value: avro
  destination:
    parameters:
      - name: aws.region
        description: AWS region.
        type: string
        default: ""
        validations:
          - type: required
            value: ""
      - name: table
        description: Table is the DynamoDB table name to pull data from, or push data into.
        type: string
        default: ""
        validations:
          - type: required
            value: ""
      - name: aws.accessKeyId
        description: |-
          AWS access key id. Optional - if not provided, the connector will use the default credential chain
          (environment variables, shared credentials file, or IAM role). For production environments,
          it's recommended to use the default credential chain with IAM roles rather than static credentials.
        type: string
        default: ""
        validations: []
      - name: aws.secretAccessKey
        description: |-
          AWS secret access key. Optional - if not provided, the connector will use the default credential chain
          (environment variables, shared credentials file, or IAM role). For production environments,
          it's recommended to use the default credential chain with IAM roles rather than static credentials.
        type: string
        default: ""
        validations: []
      - name: aws.sessionToken
        description: |-
          AWS temporary session token. Optional - if not provided, the connector will use the default credential chain.
          Note that to keep the connector running long-term, you should use the default credential chain
          rather than temporary session tokens which will expire. For production environments,
          it's recommended to use IAM roles (IRSA, EC2 instance profile, or ECS task role).
        type: string
        default: ""
        validations: []
      - name: aws.url
        description: The URL for AWS (useful when testing the connector with localstack).
        type: string
        default: ""
        validations: []
      - name: sdk.batch.delay
        description: Maximum delay before an incomplete batch is written to the destination.
        type: duration
        default: "0"
        validations: []
      - name: sdk.batch.size
        description: Maximum size of batch before it gets written to the destination.
        type: int
        default: "0"
        validations:
          - type: greater-than
            value: "-1"
      - name: sdk.rate.burst
        description: |-
          Allow bursts of at most X records (0 or less means that bursts are not
          limited). Only takes effect if a rate limit per second is set. Note that
          if `sdk.batch.size` is bigger than `sdk.rate.burst`, the effective batch
          size will be equal to `sdk.rate.burst`.
        type: int
        default: "0"
        validations:
          - type: greater-than
            value: "-1"
      - name: sdk.rate.perSecond
        description: Maximum number of records written per second (0 means no rate limit).
        type: float
        default: "0"
        validations:
          - type: greater-than
            value: "-1"
      - name: sdk.record.format
        description: |-
          The format of the output record. See the Conduit documentation for a full
          list of supported formats (https://conduit.io/docs/using/connectors/configuration-parameters/output-format).
        type: string
        default: opencdc/json
        validations: []
      - name: sdk.record.format.options
        description: |-
          Options to configure the chosen output record format. Options are normally
          key=value pairs separated with comma (e.g. opt1=val2,opt2=val2), except
          for the `template` record format, where options are a Go template.
        type: string
        default: ""
        validations: []
      - name: sdk.schema.extract.key.enabled
        description: Whether to extract and decode the record key with a schema.
        type: bool
        default: "true"
        validations: []
      - name: sdk.schema.extract.payload.enabled
        description: Whether to extract and decode the record payload with a schema.
        type: bool
        default: "true"
        validations: []
