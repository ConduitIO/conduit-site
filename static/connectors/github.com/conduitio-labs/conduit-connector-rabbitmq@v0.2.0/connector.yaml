version: "1.0"
specification:
  name: rabbitmq
  summary: A RabbitMQ source and destination plugin for Conduit, written in Go.
  description: A RabbitMQ source and destination plugin for Conduit, written in Go.
  version: v0.2.0
  author: Meroxa, Inc.
  source:
    parameters:
      - name: queue.name
        description: Name is the name of the queue to consume from / publish to
        type: string
        default: ""
        validations:
          - type: required
            value: ""
      - name: url
        description: URL is the RabbitMQ server URL
        type: string
        default: ""
        validations:
          - type: required
            value: ""
      - name: consumer.autoAck
        description: AutoAck indicates if the server should consider messages acknowledged once delivered.
        type: bool
        default: "false"
        validations: []
      - name: consumer.exclusive
        description: Exclusive indicates if the consumer should be exclusive.
        type: bool
        default: "false"
        validations: []
      - name: consumer.name
        description: Name is the name of the consumer
        type: string
        default: ""
        validations: []
      - name: consumer.noLocal
        description: NoLocal indicates if the server should not deliver messages published by the same connection.
        type: bool
        default: "false"
        validations: []
      - name: consumer.noWait
        description: NoWait indicates if the consumer should be declared without waiting for server confirmation.
        type: bool
        default: "false"
        validations: []
      - name: queue.autoDelete
        description: AutoDelete indicates if the queue will be deleted when there are no more consumers.
        type: bool
        default: "false"
        validations: []
      - name: queue.durable
        description: Durable indicates if the queue will survive broker restarts.
        type: bool
        default: "true"
        validations: []
      - name: queue.exclusive
        description: Exclusive indicates if the queue can be accessed by other connections.
        type: bool
        default: "false"
        validations: []
      - name: queue.noWait
        description: NoWait indicates if the queue should be declared without waiting for server confirmation.
        type: bool
        default: "false"
        validations: []
      - name: tls.caCert
        description: CACert is the path to the CA certificate to use for TLS
        type: string
        default: ""
        validations: []
      - name: tls.clientCert
        description: ClientCert is the path to the client certificate to use for TLS
        type: string
        default: ""
        validations: []
      - name: tls.clientKey
        description: ClientKey is the path to the client key to use for TLS
        type: string
        default: ""
        validations: []
      - name: tls.enabled
        description: Enabled indicates if TLS should be used
        type: bool
        default: "false"
        validations: []
      - name: sdk.batch.delay
        description: Maximum delay before an incomplete batch is read from the source.
        type: duration
        default: "0"
        validations: []
      - name: sdk.batch.size
        description: Maximum size of batch before it gets read from the source.
        type: int
        default: "0"
        validations:
          - type: greater-than
            value: "-1"
      - name: sdk.schema.context.enabled
        description: |-
          Specifies whether to use a schema context name. If set to false, no schema context name will
          be used, and schemas will be saved with the subject name specified in the connector
          (not safe because of name conflicts).
        type: bool
        default: "true"
        validations: []
      - name: sdk.schema.context.name
        description: |-
          Schema context name to be used. Used as a prefix for all schema subject names.
          If empty, defaults to the connector ID.
        type: string
        default: ""
        validations: []
      - name: sdk.schema.extract.key.enabled
        description: Whether to extract and encode the record key with a schema.
        type: bool
        default: "true"
        validations: []
      - name: sdk.schema.extract.key.subject
        description: |-
          The subject of the key schema. If the record metadata contains the field
          "opencdc.collection" it is prepended to the subject name and separated
          with a dot.
        type: string
        default: key
        validations: []
      - name: sdk.schema.extract.payload.enabled
        description: Whether to extract and encode the record payload with a schema.
        type: bool
        default: "true"
        validations: []
      - name: sdk.schema.extract.payload.subject
        description: |-
          The subject of the payload schema. If the record metadata contains the
          field "opencdc.collection" it is prepended to the subject name and
          separated with a dot.
        type: string
        default: payload
        validations: []
      - name: sdk.schema.extract.type
        description: The type of the payload schema.
        type: string
        default: avro
        validations:
          - type: inclusion
            value: avro
  destination:
    parameters:
      - name: queue.name
        description: Name is the name of the queue to consume from / publish to
        type: string
        default: ""
        validations:
          - type: required
            value: ""
      - name: url
        description: URL is the RabbitMQ server URL
        type: string
        default: ""
        validations:
          - type: required
            value: ""
      - name: delivery.appID
        description: AppID specifies the application that created the message.
        type: string
        default: ""
        validations: []
      - name: delivery.contentEncoding
        description: ContentEncoding specifies the encoding of the message content.
        type: string
        default: ""
        validations: []
      - name: delivery.contentType
        description: ContentType specifies the MIME type of the message content. Defaults to "application/json".
        type: string
        default: application/json
        validations: []
      - name: delivery.correlationID
        description: CorrelationID is used to correlate RPC responses with requests.
        type: string
        default: ""
        validations: []
      - name: delivery.deliveryMode
        description: DeliveryMode indicates the message delivery mode. Non-persistent (1) or persistent (2). Default is 2 (persistent).
        type: int
        default: "2"
        validations: []
      - name: delivery.expiration
        description: Expiration specifies the message expiration time, if any.
        type: string
        default: ""
        validations: []
      - name: delivery.immediate
        description: Immediate indicates if the message should be treated as immediate. If true, the message is not queued if no consumers are on the matching queue.
        type: bool
        default: "false"
        validations: []
      - name: delivery.mandatory
        description: Mandatory indicates if the message is mandatory. If true, tells the server to return the message if it cannot be routed to a queue.
        type: bool
        default: "false"
        validations: []
      - name: delivery.messageTypeName
        description: MessageTypeName specifies the message type name.
        type: string
        default: ""
        validations: []
      - name: delivery.priority
        description: Priority specifies the message priority. Ranges from 0 to 9. Default is 0.
        type: int
        default: "0"
        validations:
          - type: greater-than
            value: "-1"
          - type: less-than
            value: "10"
      - name: delivery.replyTo
        description: ReplyTo specifies the address to reply to.
        type: string
        default: ""
        validations: []
      - name: delivery.userID
        description: UserID specifies the user who created the message. Useful for publishers.
        type: string
        default: ""
        validations: []
      - name: exchange.autoDelete
        description: AutoDelete indicates if the exchange will be deleted when the last queue is unbound from it.
        type: bool
        default: "false"
        validations: []
      - name: exchange.durable
        description: Durable indicates if the exchange will survive broker restarts.
        type: bool
        default: "true"
        validations: []
      - name: exchange.internal
        description: Internal indicates if the exchange is used for internal purposes and cannot be directly published to by a client.
        type: bool
        default: "false"
        validations: []
      - name: exchange.name
        description: Name is the name of the exchange.
        type: string
        default: ""
        validations: []
      - name: exchange.noWait
        description: NoWait indicates if the exchange should be declared without waiting for server confirmation.
        type: bool
        default: "false"
        validations: []
      - name: exchange.type
        description: Type is the type of the exchange (e.g., direct, fanout, topic, headers).
        type: string
        default: ""
        validations: []
      - name: queue.autoDelete
        description: AutoDelete indicates if the queue will be deleted when there are no more consumers.
        type: bool
        default: "false"
        validations: []
      - name: queue.durable
        description: Durable indicates if the queue will survive broker restarts.
        type: bool
        default: "true"
        validations: []
      - name: queue.exclusive
        description: Exclusive indicates if the queue can be accessed by other connections.
        type: bool
        default: "false"
        validations: []
      - name: queue.noWait
        description: NoWait indicates if the queue should be declared without waiting for server confirmation.
        type: bool
        default: "false"
        validations: []
      - name: routingKey
        description: RoutingKey is the routing key to use when publishing to an exchange
        type: string
        default: ""
        validations: []
      - name: tls.caCert
        description: CACert is the path to the CA certificate to use for TLS
        type: string
        default: ""
        validations: []
      - name: tls.clientCert
        description: ClientCert is the path to the client certificate to use for TLS
        type: string
        default: ""
        validations: []
      - name: tls.clientKey
        description: ClientKey is the path to the client key to use for TLS
        type: string
        default: ""
        validations: []
      - name: tls.enabled
        description: Enabled indicates if TLS should be used
        type: bool
        default: "false"
        validations: []
      - name: sdk.batch.delay
        description: Maximum delay before an incomplete batch is written to the destination.
        type: duration
        default: "0"
        validations: []
      - name: sdk.batch.size
        description: Maximum size of batch before it gets written to the destination.
        type: int
        default: "0"
        validations:
          - type: greater-than
            value: "-1"
      - name: sdk.rate.burst
        description: |-
          Allow bursts of at most X records (0 or less means that bursts are not
          limited). Only takes effect if a rate limit per second is set. Note that
          if `sdk.batch.size` is bigger than `sdk.rate.burst`, the effective batch
          size will be equal to `sdk.rate.burst`.
        type: int
        default: "0"
        validations:
          - type: greater-than
            value: "-1"
      - name: sdk.rate.perSecond
        description: Maximum number of records written per second (0 means no rate limit).
        type: float
        default: "0"
        validations:
          - type: greater-than
            value: "-1"
      - name: sdk.record.format
        description: |-
          The format of the output record. See the Conduit documentation for a full
          list of supported formats (https://conduit.io/docs/using/connectors/configuration-parameters/output-format).
        type: string
        default: opencdc/json
        validations: []
      - name: sdk.record.format.options
        description: |-
          Options to configure the chosen output record format. Options are normally
          key=value pairs separated with comma (e.g. opt1=val2,opt2=val2), except
          for the `template` record format, where options are a Go template.
        type: string
        default: ""
        validations: []
      - name: sdk.schema.extract.key.enabled
        description: Whether to extract and decode the record key with a schema.
        type: bool
        default: "true"
        validations: []
      - name: sdk.schema.extract.payload.enabled
        description: Whether to extract and decode the record payload with a schema.
        type: bool
        default: "true"
        validations: []
